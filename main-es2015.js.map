{"version":3,"sources":["./src/app/components/cognite-model-revisions-list/cognite-model-revisions-list.component.ts","./src/app/components/cognite-model-revisions-list/cognite-model-revisions-list.component.html","./src/app/graphql.module.ts","./src/environments/environment.ts","./src/app/itg-api.service.ts","./src/app/components/cognite-threed-node-details/cognite-threed-node-details.component.ts","./src/app/components/cognite-threed-node-details/cognite-threed-node-details.component.html","./src/app/page/login-page/login.component.ts","./src/app/page/login-page/login.component.html","./src/app/components/cognite-threed-viewer/cognite-threed-viewer.component.ts","./src/app/components/cognite-threed-viewer/cognite-threed-viewer.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/itg-group-details/itg-group-details.component.ts","./src/app/components/itg-group-details/itg-group-details.component.html","./src/app/components/itg-groups-list/itg-groups-list.component.ts","./src/app/components/itg-groups-list/itg-groups-list.component.html","./src/app/components/itg-groups-list/new-group-dialog.component.html","./src/app/components/cognite-models-list/cognite-models-list.component.ts","./src/app/components/cognite-models-list/cognite-models-list.component.html","./src/app/cognite-api.service.ts","./src/app/components/file-list/file-list.component.ts","./src/app/components/file-list/file-list.component.html","./src/app/components/top-bar/top-bar.component.html","./src/app/components/top-bar/top-bar.component.ts","./src/app/page/threed-page/threed-page.component.ts","./src/app/page/threed-page/threed-page.component.html","./src/app/cognite-auth.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Revision3D } from '@cognite/sdk/dist/src';\nimport { CogniteApiService } from '../../cognite-api.service';\n\n@Component({\n  selector: 'app-cognite-model-revisions-list',\n  templateUrl: './cognite-model-revisions-list.component.html',\n  styleUrls: ['./cognite-model-revisions-list.component.css'],\n})\nexport class CogniteModelRevisionsListComponent implements OnInit, OnChanges {\n  @Input() modelId: number;\n  @Output() newRevisionId = new EventEmitter<number>();\n\n  revisions: Revision3D[];\n  loading = true;\n  error: any;\n\n  selectedRevision: number;\n\n  constructor(private cogniteApiService: CogniteApiService) {\n    this.revisions = [];\n  }\n\n  ngOnInit(): void {\n    this.cogniteApiService\n      .get3DModelRevisions(this.modelId)\n      .subscribe((result) => {\n        this.revisions = result;\n      });\n  }\n\n  ngOnChanges(): void {\n    this.cogniteApiService\n      .get3DModelRevisions(this.modelId)\n      .subscribe((result) => {\n        this.revisions = result;\n      });\n  }\n\n  onRevisionSelected(newSelectedRevisionId: number): void {\n    this.selectedRevision = newSelectedRevisionId;\n    this.newRevisionId.emit(newSelectedRevisionId);\n  }\n}\n","<div class=\"flex\">\n  <div style=\"flex: 1\">\n    <mat-list *ngFor=\"let item of revisions\">\n      <mat-list-item role=\"listitem\">\n        <button mat-button (click)=\"onRevisionSelected(item.id)\">\n          {{ item.createdTime.toISOString() }}\n          <mat-icon>arrow_forward</mat-icon>\n        </button></mat-list-item\n      >\n    </mat-list>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { APOLLO_OPTIONS } from 'apollo-angular';\nimport {\n  ApolloClientOptions,\n  ApolloLink,\n  InMemoryCache,\n} from '@apollo/client/core';\nimport { HttpLink } from 'apollo-angular/http';\nimport { setContext } from '@apollo/client/link/context';\n\n// UPDATE THE URL BELOW TO BE THE CORRECT PROJECT ID\nconst URL =\n  'https://itg.cognite.ai/api/v1/projects/a24a387c5-396e-4443-89d4-cfad8ade6509/graphql'; // <-- add the URL of the GraphQL server here\n\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n  return {\n    link: ApolloLink.from([\n      setContext(() => ({\n        headers: {\n          // Add the API key for api request to your data model\n          authorization: `Bearer ${localStorage.getItem('API_KEY')}`,\n        },\n      })),\n      httpLink.create({\n        uri: URL,\n      }),\n    ]),\n    cache: new InMemoryCache(),\n  };\n}\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport { ListResponse, Model3D, RevealNode3D, Revision3D } from '@cognite/sdk';\nimport { Apollo, gql } from 'apollo-angular';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CogniteAuthService } from './cognite-auth.service';\n\nconst QUERY_GROUPS = gql`\n  query QueryGroup($modelId: String, $revisionId: String, $groupId: ID) {\n    MyGroup(\n      filter: { modelId: $modelId, revisionId: $revisionId, id: $groupId }\n    ) {\n      id\n      name\n      modelId\n      revisionId\n      nodes {\n        nodeId\n        comment\n      }\n    }\n  }\n`;\n\nconst CREATE_GROUP = gql`\n  mutation CreateGroup(\n    $modelId: String!\n    $revisionId: String!\n    $name: String!\n  ) {\n    CreateMyGroup(modelId: $modelId, revisionId: $revisionId, name: $name) {\n      id\n    }\n  }\n`;\n\nconst DELETE_GROUP = gql`\n  mutation CreateGroup($groupId: ID!) {\n    DeleteMyGroup(id: $groupId) {\n      id\n    }\n  }\n`;\n\nconst CREATE_NODE = gql`\n  mutation CreateNode($nodeId: String!, $comment: String) {\n    MergeMyNode(nodeId: $nodeId, comment: $comment) {\n      nodeId\n    }\n  }\n`;\n\nconst QUERY_NODE_BY_ID = gql`\n  query MyNode($nodeId: String!) {\n    MyNode(nodeId: $nodeId) {\n      nodeId\n    }\n  }\n`;\n\nconst ADD_NODE_TO_GROUP = gql`\n  mutation AddNodeToGroup($nodeId: String!, $groupId: ID!) {\n    AddMyNodeGroup(from: { id: $groupId }, to: { nodeId: $nodeId }) {\n      to {\n        nodeId\n      }\n    }\n  }\n`;\nconst REMOVE_NODE_FROM_GROUP = gql`\n  mutation RemoveNodeToGroup($nodeId: String!, $groupId: ID!) {\n    RemoveMyNodeGroup(from: { id: $groupId }, to: { nodeId: $nodeId }) {\n      to {\n        nodeId\n      }\n    }\n  }\n`;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CogniteITGService {\n  constructor(private graphqlClient: Apollo) {}\n\n  getGroups(modelId: number, revisionId: number, pollInterval?: number) {\n    return this.graphqlClient.watchQuery({\n      query: QUERY_GROUPS,\n      variables: {\n        modelId: `${modelId}`,\n        revisionId: `${revisionId}`,\n      },\n      pollInterval,\n    });\n  }\n  getGroup(groupId: string, pollInterval?: number) {\n    return this.graphqlClient.watchQuery<{ MyGroup: any[] }>({\n      query: QUERY_GROUPS,\n      variables: {\n        groupId,\n      },\n      pollInterval,\n    });\n  }\n  createGroup(modelId: number, revisionId: number, name: string) {\n    return this.graphqlClient.mutate({\n      mutation: CREATE_GROUP,\n      variables: {\n        modelId: `${modelId}`,\n        revisionId: `${revisionId}`,\n        name,\n      },\n    });\n  }\n  deleteGroup(groupId: string) {\n    return this.graphqlClient.mutate({\n      mutation: DELETE_GROUP,\n      variables: {\n        groupId,\n      },\n    });\n  }\n\n  addNodeToGroup(nodeId: number, groupId: string, comment?: string) {\n    return this.createNodeIfNotExists(nodeId, comment).subscribe(() => {\n      return this.graphqlClient\n        .mutate({\n          mutation: ADD_NODE_TO_GROUP,\n          variables: {\n            nodeId: `${nodeId}`,\n            groupId: groupId,\n          },\n        })\n        .subscribe();\n    });\n  }\n\n  removeNodeFromGroup(nodeId: number, groupId: string) {\n    return this.graphqlClient\n      .mutate({\n        mutation: REMOVE_NODE_FROM_GROUP,\n        variables: {\n          nodeId: `${nodeId}`,\n          groupId: groupId,\n        },\n      })\n      .subscribe();\n  }\n\n  createNodeIfNotExists(nodeId: number, comment?: string) {\n    return this.graphqlClient\n      .query<{ MyNode: any[] }>({\n        query: QUERY_NODE_BY_ID,\n        variables: {\n          nodeId: `${nodeId}`,\n        },\n      })\n      .pipe(\n        map(\n          (\n            result: ApolloQueryResult<{\n              MyNode: any[];\n            }>\n          ) => {\n            if (result.data.MyNode.length === 0) {\n              return this.graphqlClient\n                .mutate<{ MyNode: any[] }>({\n                  mutation: CREATE_NODE,\n                  variables: {\n                    nodeId: `${nodeId}`,\n                    comment: comment,\n                  },\n                })\n                .subscribe();\n            }\n            return result;\n          }\n        )\n      );\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { RevealNode3D } from '@cognite/sdk/dist/src';\nimport { CogniteApiService } from 'src/app/cognite-api.service';\nimport { CogniteITGService } from 'src/app/itg-api.service';\n\n@Component({\n  selector: 'app-cognite-threed-node-details',\n  templateUrl: './cognite-threed-node-details.component.html',\n  styleUrls: ['./cognite-threed-node-details.component.css'],\n})\nexport class CogniteThreedNodeDetailsComponent implements OnInit, OnChanges {\n  @Input() modelId: number;\n  @Input() revisionId: number;\n  @Input() nodeId: number;\n  @Input() groupId: string | undefined;\n  @Output() onClearSelection = new EventEmitter();\n  group: any;\n\n  node: RevealNode3D | undefined;\n\n  constructor(\n    private itgService: CogniteITGService,\n    private apiService: CogniteApiService\n  ) {}\n\n  ngOnInit(): void {\n    this.apiService\n      .get3DModelNode(this.modelId, this.revisionId, this.nodeId)\n      .subscribe((nodes) => (this.node = nodes[0]));\n    if (this.groupId) {\n      this.itgService\n        .getGroup(this.groupId)\n        .valueChanges.subscribe((res) => (this.group = res.data.MyGroup[0]));\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes.nodeId &&\n      changes.nodeId.previousValue !== changes.nodeId.currentValue\n    ) {\n      this.apiService\n        .get3DModelNode(this.modelId, this.revisionId, this.nodeId)\n        .subscribe((nodes) => (this.node = nodes[0]));\n    }\n    if (changes.groupId && this.groupId) {\n      this.itgService\n        .getGroup(this.groupId)\n        .valueChanges.subscribe((res) => (this.group = res.data.MyGroup[0]));\n    }\n  }\n\n  get properties() {\n    return unflattenList(this.node.properties);\n  }\n  get isInGroup() {\n    if (!this.group) {\n      return false;\n    }\n    return this.group.nodes.some((el) => el.nodeId === `${this.nodeId}`);\n  }\n\n  addNodeToGroup() {\n    if (this.groupId) {\n      this.itgService.addNodeToGroup(this.nodeId, this.groupId);\n    }\n  }\n  deleteNodeFromGroup() {\n    if (this.groupId) {\n      this.itgService.removeNodeFromGroup(this.nodeId, this.groupId);\n    }\n  }\n}\n\nconst unflattenList = (obj: any, key?: string) => {\n  return Object.entries(obj).reduce((prev, [innerKey, value]) => {\n    const visibleKey = key ? `${key}.` : '';\n    if (typeof value === 'object') {\n      return prev.concat(unflattenList(value, `${visibleKey}${innerKey}`));\n    }\n    return prev.concat([[`${visibleKey}${innerKey}`, value]]);\n  }, []);\n};\n","<div class=\"wrapper\">\n  <mat-progress-spinner *ngIf=\"node === undefined\"></mat-progress-spinner>\n  <div *ngIf=\"node !== undefined\">\n    <button mat-button (click)=\"onClearSelection.emit()\">\n      <mat-icon>close</mat-icon> Cancel Node Selection\n    </button>\n    <mat-divider></mat-divider>\n    <h3 style=\"margin-top: 12px\">{{ node.name }}</h3>\n    <button\n      mat-raised-button\n      [disabled]=\"groupId === undefined\"\n      *ngIf=\"!isInGroup\"\n      (click)=\"addNodeToGroup()\"\n      color=\"primary\"\n    >\n      Add to group\n    </button>\n    <button\n      mat-raised-button\n      *ngIf=\"isInGroup\"\n      [disabled]=\"groupId === undefined\"\n      (click)=\"deleteNodeFromGroup()\"\n      color=\"warn\"\n    >\n      Remove from group\n    </button>\n    <p *ngIf=\"groupId === undefined\" style=\"margin-top: 12px\">\n      Unable to add to group, please create/select a group first.\n    </p>\n    <p style=\"margin-top: 12px\">Properties</p>\n    <table mat-table [dataSource]=\"properties\" style=\"width: 100%\">\n      <ng-container matColumnDef=\"key\">\n        <th mat-header-cell *matHeaderCellDef>Key</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element[0] }}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"value\">\n        <th mat-header-cell *matHeaderCellDef>Value</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element[1] }}</td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"['key', 'value']\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['key', 'value']\"></tr>\n    </table>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CogniteAuthService } from '../../cognite-auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  apiKey = localStorage.getItem('API_KEY') || '';\n  cogniteAuthService: CogniteAuthService;\n\n  constructor(cogniteAuthService: CogniteAuthService) {\n    this.cogniteAuthService = cogniteAuthService;\n  }\n\n  ngOnInit(): void {\n    if (localStorage.getItem('API_KEY')) {\n      this.onLogin();\n    }\n  }\n\n  async onLogin() {\n    await this.cogniteAuthService.login(this.apiKey);\n    localStorage.setItem('API_KEY', this.apiKey);\n    await this.cogniteAuthService.getSdk().login.status();\n  }\n}\n","<div class=\"wrapper\">\n  <p>\n    * By default, if you have not deployed the schema in another tenant (see\n    README.md for more info), the project is on `sample-cdf-graphql-angular-app`\n    in the `aize-dev` tenant.\n  </p>\n  <mat-form-field style=\"width: 400px\">\n    <mat-label>Cognite API Key (aize-dev tenant by default*)</mat-label>\n    <input\n      matInput\n      placeholder=\"Ex. API key for `aize-dev` tenant\"\n      [(ngModel)]=\"apiKey\"\n    />\n  </mat-form-field>\n  <button mat-button (click)=\"onLogin()\">Login</button>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  TreeIndexNodeCollection,\n  Cognite3DModel,\n  Cognite3DViewer,\n  CognitePointCloudModel,\n  InvertedNodeCollection,\n  NodeOutlineColor,\n  DefaultNodeAppearance,\n} from '@cognite/reveal';\nimport { CogniteClient } from '@cognite/sdk';\nimport { CogniteAuthService } from 'src/app/cognite-auth.service';\nimport { CogniteITGService } from 'src/app/itg-api.service';\n// UPDATES TO FILE PLEASE REMEMBER TO UPDATE README\n@Component({\n  selector: 'app-cognite-threed-viewer',\n  templateUrl: './cognite-threed-viewer.component.html',\n  styleUrls: ['./cognite-threed-viewer.component.css'],\n})\nexport class CogniteThreedViewerComponent\n  implements OnInit, OnChanges, OnDestroy\n{\n  @Input() modelId: number;\n  @Input() revisionId: number;\n  @Input() selectedNodeId: number;\n  @Output() onNodeSelect = new EventEmitter<number>();\n\n  viewer: Cognite3DViewer;\n  sdk: CogniteClient;\n\n  model: Cognite3DModel | CognitePointCloudModel;\n\n  @Input() visibleGroupId: string | undefined;\n  visibleNodeIds: number[] | undefined = undefined;\n\n  constructor(\n    private cogniteAuthService: CogniteAuthService,\n    // Not needed to load just the model.\n    private itgService: CogniteITGService\n  ) {\n    this.sdk = this.cogniteAuthService.getSdk();\n  }\n\n  /**\n   * Runs when the component is initialized.\n   *\n   * Loads in the model and and sets a `onClick` that detects the location a click event has happened.\n   */\n  async ngOnInit(): Promise<void> {\n    const domElement = document.getElementById('viewer');\n\n    // Instantiates the viewer\n    this.viewer = new Cognite3DViewer({\n      sdk: this.sdk,\n      domElement,\n    });\n\n    // Setup a click handler\n    this.viewer.on('click', this._onClick.bind(this));\n\n    // Add the model to the viewer.\n    this._addModelToViewer(this.modelId, this.revisionId);\n  }\n\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\n    if (changes.revisionId && this.model) {\n      this._addModelToViewer(this.modelId, this.revisionId);\n    }\n    if (changes.selectedNodeId) {\n      this._highlightNodes(this.selectedNodeId, this.visibleNodeIds);\n    }\n    if (changes.visibleGroupId) {\n      if (this.visibleGroupId) {\n        this.itgService\n          .getGroup(this.visibleGroupId)\n          .valueChanges.subscribe((res) => {\n            this.visibleNodeIds = res.data.MyGroup[0].nodes.map(\n              (el) => el.nodeId\n            );\n            if (this.visibleGroupId) {\n              this._highlightNodes(this.selectedNodeId, this.visibleNodeIds);\n            }\n          });\n      } else {\n        this.visibleNodeIds = undefined;\n        this._highlightNodes(this.selectedNodeId, this.visibleNodeIds);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.viewer.dispose();\n  }\n\n  /**\n   * Adds a model to the viewer\n   *\n   * @param modelId id of the model from CDF\n   * @param revisionId id of the revision that you want for the model from CDF\n   */\n  async _addModelToViewer(modelId: number, revisionId: number) {\n    // Remove any of the existing model\n    if (this.model) {\n      await this.viewer.removeModel(this.model);\n    }\n    // Add the model to the 3d viewer\n    this.model = await this.viewer.addModel({\n      modelId: modelId,\n      revisionId: revisionId,\n    });\n    // Load and use the initial camera associated with the model\n    this.viewer.loadCameraFromModel(this.model);\n  }\n\n  /**\n   * When a click occured in the viewer, this should be what handles it.\n   *\n   * @param param0 { offsetX, offsetY }\n   */\n  async _onClick({ offsetX, offsetY }: { offsetX: number; offsetY: number }) {\n    if (this.viewer) {\n      // Get the location of the \"click\" event.\n      const intersection = await this.viewer.getIntersectionFromPixel(\n        offsetX,\n        offsetY\n      );\n\n      // If the \"click\" has a valid intersection with an object on screen\n      if (intersection) {\n        const currentModel = intersection.model as Cognite3DModel;\n        // Get the treeIndex, which is the identifier for a node in a 3D tree\n        const treeIndex = (intersection as any).treeIndex;\n\n        // Sadly the treeIndex is only used internally for the viewer - we need to next get the nodeId\n        const nodeId = await currentModel.mapTreeIndexToNodeId(treeIndex);\n\n        // Great, we have found the nodeId, lets use this\n        this.onNodeSelect.emit(nodeId);\n        this.selectedNodeId = nodeId;\n      }\n    }\n  }\n\n  async _highlightNodes(selectedNodeId?: number, visibleNodeIds?: number[]) {\n    if (this.model) {\n      const currentModel = this.model as Cognite3DModel;\n\n      // Clear all existing node styles\n      currentModel.removeAllStyledNodeCollections();\n\n      // If theres a selection, draw pink box and make all colors for other nodes grey\n      if (selectedNodeId) {\n        // Since the viewer speaks in treeIndex, we need to convert the selected node to treeIndex\n        const selectedTreeIndex = await currentModel.mapNodeIdToTreeIndex(\n          selectedNodeId\n        );\n\n        // In the new viewer, we have to set up a node set and apply a rule on it.\n        // Node set created\n        const newNodeSet = new TreeIndexNodeCollection([selectedTreeIndex]);\n\n        // Adding style to everything NOT in the node set to make them grey\n        await currentModel.assignStyledNodeCollection(\n          new InvertedNodeCollection(currentModel, newNodeSet),\n          { color: [100, 100, 100] }\n        );\n\n        // Adding style to everything in the node set to make them have a red outline\n        await currentModel.assignStyledNodeCollection(newNodeSet, {\n          outlineColor: NodeOutlineColor.Red,\n        });\n      }\n\n      // If theres a visibility filter, ghost all other nodes\n      if (visibleNodeIds) {\n        // Since the viewer speaks in treeIndex, we need to convert the visible nodes to treeIndexes\n        const visibleTreeIndexes = await Promise.all(\n          visibleNodeIds.map((id) => currentModel.mapNodeIdToTreeIndex(id))\n        );\n\n        // In the new viewer, we have to set up a node set and apply a rule on it.\n        // Node set created\n        const newNodeSet = new TreeIndexNodeCollection(visibleTreeIndexes);\n\n        // Adding style to everything NOT in the node set to make them ghosted (translucent)\n        currentModel.setDefaultNodeAppearance(DefaultNodeAppearance.Ghosted);\n        currentModel.assignStyledNodeCollection(newNodeSet, DefaultNodeAppearance.Default);\n      }\n    }\n  }\n}\n","<div id=\"viewer\"></div>\n","<app-top-bar [isLoggedIn]=\"isLoggedIn\"></app-top-bar>\r\n<app-login *ngIf=\"!isLoggedIn\"></app-login>\r\n\r\n<div class=\"container\" *ngIf=\"isLoggedIn\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<!-- \r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n-->\r\n","import { Component } from \"@angular/core\";\r\nimport { CogniteAuthService } from \"./cognite-auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  isLoggedIn = false;\r\n\r\n  constructor(cogniteAuthService: CogniteAuthService) {\r\n    cogniteAuthService.loggedIn.subscribe(\r\n      (loggedIn) => (this.isLoggedIn = loggedIn)\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { GraphQLModule } from './graphql.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { TopBarComponent } from './components/top-bar/top-bar.component';\r\nimport { FileListComponent } from './components/file-list/file-list.component';\r\nimport { CogniteModelsListComponent } from './components/cognite-models-list/cognite-models-list.component';\r\nimport { CogniteModelRevisionsListComponent } from './components/cognite-model-revisions-list/cognite-model-revisions-list.component';\r\nimport { ThreedPageComponent } from './page/threed-page/threed-page.component';\r\nimport { LoginComponent } from './page/login-page/login.component';\r\nimport { CogniteThreedViewerComponent } from './components/cognite-threed-viewer/cognite-threed-viewer.component';\r\nimport {\r\n  ItgGroupsListComponent,\r\n  DialogOverviewExampleDialog,\r\n} from './components/itg-groups-list/itg-groups-list.component';\r\nimport { ItgGroupDetailsComponent } from './components/itg-group-details/itg-group-details.component';\r\nimport { CogniteThreedNodeDetailsComponent } from './components/cognite-threed-node-details/cognite-threed-node-details.component';\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot([{ path: '', component: ThreedPageComponent }]),\r\n    BrowserAnimationsModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatRippleModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    GraphQLModule,\r\n    HttpClientModule,\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    TopBarComponent,\r\n    LoginComponent,\r\n    FileListComponent,\r\n    CogniteModelsListComponent,\r\n    CogniteModelRevisionsListComponent,\r\n    ThreedPageComponent,\r\n    CogniteThreedViewerComponent,\r\n    ItgGroupsListComponent,\r\n    DialogOverviewExampleDialog,\r\n    ItgGroupDetailsComponent,\r\n    CogniteThreedNodeDetailsComponent,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { QueryRef } from 'apollo-angular';\nimport { CogniteITGService } from 'src/app/itg-api.service';\n\n@Component({\n  selector: 'app-itg-group-details',\n  templateUrl: './itg-group-details.component.html',\n  styleUrls: ['./itg-group-details.component.css'],\n})\nexport class ItgGroupDetailsComponent implements OnInit {\n  @Input() groupId: string;\n  @Output() onBackClicked = new EventEmitter<boolean>();\n  @Output() onNodeClicked = new EventEmitter<number>();\n  @Output() onHighlightGroup = new EventEmitter<boolean>();\n\n  groupQuery: QueryRef<any>;\n  group: any;\n\n  constructor(private itgService: CogniteITGService) {}\n\n  ngOnInit(): void {\n    this.groupQuery = this.itgService.getGroup(this.groupId, 3000);\n\n    this.groupQuery.valueChanges.subscribe(\n      (res) => (this.group = res.data.MyGroup[0])\n    );\n  }\n\n  goBack(): void {\n    this.onBackClicked.emit(true);\n  }\n\n  selectNode(nodeId: string): void {\n    this.onNodeClicked.emit(Number(nodeId));\n  }\n}\n","<mat-progress-spinner *ngIf=\"group === undefined\"></mat-progress-spinner>\n<div *ngIf=\"group !== undefined\">\n  <button mat-button (click)=\"goBack()\">\n    <mat-icon>arrow_back</mat-icon> Back to All Groups for Model\n  </button>\n  <h3>Group: {{ group.name }}</h3>\n  <button\n    mat-raised-button\n    (click)=\"onHighlightGroup.emit(true)\"\n    color=\"primary\"\n  >\n    Toggle group visibility\n  </button>\n  <p style=\"margin-top: 12px\">3D Nodes in {{ group.name }}</p>\n  <mat-list>\n    <mat-list-item\n      mat-ripple\n      *ngFor=\"let item of group.nodes\"\n      style=\"cursor: pointer\"\n      (click)=\"selectNode(item.nodeId)\"\n    >\n      <div matLine>\n        <span>ID: {{ item.nodeId }}</span>\n        <!-- <span>Comment: {{ item.comment || 'N/A' }}</span> -->\n      </div>\n    </mat-list-item>\n  </mat-list>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport { QueryRef } from 'apollo-angular';\nimport { CogniteITGService } from 'src/app/itg-api.service';\n\n@Component({\n  selector: 'app-itg-groups-list',\n  templateUrl: './itg-groups-list.component.html',\n  styleUrls: ['./itg-groups-list.component.css'],\n})\nexport class ItgGroupsListComponent implements OnInit, OnChanges {\n  @Input() modelId: number;\n  @Input() revisionId: number;\n  @Input() selectedGroupId: string;\n  @Output() onSelectGroup = new EventEmitter<string>();\n\n  groupsQuery: QueryRef<any>;\n  newGroupName: string;\n\n  groups: any[] = [];\n\n  constructor(\n    private itgService: CogniteITGService,\n    public dialog: MatDialog\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this._refetchList();\n  }\n\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\n    if (changes.revisionId.currentValue !== changes.revisionId.previousValue) {\n      this._refetchList();\n    }\n  }\n\n  _refetchList(): void {\n    this.groupsQuery = this.itgService.getGroups(\n      this.modelId,\n      this.revisionId,\n      5000\n    );\n    this.groupsQuery.valueChanges.subscribe(\n      (results: ApolloQueryResult<{ MyGroup: any[] }>) => {\n        this.groups = results.data.MyGroup;\n      }\n    );\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: '40%',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.newGroupName = result;\n\n      if (result) {\n        this.itgService\n          .createGroup(this.modelId, this.revisionId, result)\n          .subscribe(() => this.groupsQuery.refetch());\n      }\n    });\n  }\n\n  deleteGroup(groupId: string): void {\n    this.itgService\n      .deleteGroup(groupId)\n      .subscribe(() => this.groupsQuery.refetch());\n  }\n\n  selectGroup(groupId: string): void {\n    this.onSelectGroup.emit(groupId);\n    this.selectedGroupId = groupId;\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: './new-group-dialog.component.html',\n})\nexport class DialogOverviewExampleDialog {\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public name: string\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onYesClick(): void {}\n}\n","<div class=\"wrapper\">\n  <h2>All Saved Groups in ITG for this model</h2>\n  <button mat-raised-button (click)=\"openDialog()\">Create Group</button>\n  <mat-list>\n    <mat-list-item matRipple class=\"item\" *ngFor=\"let item of groups\"\n      ><div mat-line (click)=\"selectGroup(item.id)\">\n        <span>{{ item.name }} ({{ item.nodes.length }} nodes) </span>\n      </div>\n      <button mat-button color=\"warn\" (click)=\"deleteGroup(item.id)\">\n        <mat-icon>delete</mat-icon>\n      </button>\n    </mat-list-item>\n  </mat-list>\n  <p *ngIf=\"groups.length === 0\">No Groups Defined</p>\n</div>\n","<h1 mat-dialog-title>Add a new Group</h1>\n<div mat-dialog-content>\n  <p>\n    Give a name for a new group, you can store all relevant 3d nodes for a model\n    within a group.\n  </p>\n  <mat-form-field>\n    <mat-label>New Group Name</mat-label>\n    <input matInput [(ngModel)]=\"name\" />\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\n  <button mat-button [mat-dialog-close]=\"name\" cdkFocusInitial color=\"primary\">\n    Ok\n  </button>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Model3D } from '@cognite/sdk';\nimport { CogniteApiService } from '../../cognite-api.service';\n\n@Component({\n  selector: 'app-cognite-models-list',\n  templateUrl: './cognite-models-list.component.html',\n  styleUrls: ['./cognite-models-list.component.css'],\n})\nexport class CogniteModelsListComponent implements OnInit {\n  models: Model3D[];\n  loading = true;\n  error: any;\n\n  selectedModel: number;\n  selectedRevision: number;\n\n  @Output() onModelAndRevision = new EventEmitter<\n    { modelId: number; revisionId: number } | undefined\n  >();\n\n  constructor(private cogniteApiService: CogniteApiService) {\n    this.models = [];\n  }\n\n  ngOnInit(): void {\n    this.cogniteApiService.get3DModels().subscribe((result) => {\n      this.models = result;\n    });\n  }\n\n  onModelSelected(newSelectedModelId: number): void {\n    if (newSelectedModelId === this.selectedModel) {\n      this.selectedModel = undefined;\n      this.selectedRevision = undefined;\n    } else {\n      this.selectedModel = newSelectedModelId;\n      this.selectedRevision = undefined;\n    }\n  }\n\n  onRevisionSelected(newRevisionId: number): void {\n    if (newRevisionId === this.selectedRevision) {\n      this.selectedRevision = undefined;\n      this.onModelAndRevision.emit(undefined);\n    } else {\n      this.selectedRevision = newRevisionId;\n      this.onModelAndRevision.emit({\n        modelId: this.selectedModel,\n        revisionId: this.selectedRevision,\n      });\n    }\n  }\n}\n","<div>\n  <h1>3D Models</h1>\n  <mat-list *ngFor=\"let item of models\">\n    <mat-expansion-panel\n      hideToggle\n      [expanded]=\"item.id === selectedModel\"\n      (opened)=\"onModelSelected(item.id)\"\n    >\n      <mat-expansion-panel-header>\n        <mat-panel-title>{{ item.name }}</mat-panel-title>\n      </mat-expansion-panel-header>\n      <div *ngIf=\"selectedModel === item.id\">\n        <p>Revisions</p>\n        <app-cognite-model-revisions-list\n          [modelId]=\"selectedModel\"\n          (newRevisionId)=\"onRevisionSelected($event)\"\n        ></app-cognite-model-revisions-list>\n      </div>\n    </mat-expansion-panel>\n  </mat-list>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ListResponse, Model3D, RevealNode3D, Revision3D } from '@cognite/sdk';\nimport { from, Observable } from 'rxjs';\nimport { CogniteAuthService } from './cognite-auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CogniteApiService {\n  constructor(private cogniteAuthService: CogniteAuthService) {}\n\n  get3DModels(): Observable<Model3D[]> {\n    return from(\n      this.cogniteAuthService\n        .getSdk()\n        .models3D.list({ limit: 1000 })\n        .autoPagingToArray()\n    );\n  }\n\n  get3DModelRevisions(modelId: number): Observable<Revision3D[]> {\n    return from(\n      this.cogniteAuthService\n        .getSdk()\n        .revisions3D.list(modelId, { limit: 1000 })\n        .autoPagingToArray()\n    );\n  }\n\n  get3DModelNode(\n    modelId: number,\n    revisionId: number,\n    nodeId: number\n  ): Observable<RevealNode3D[]> {\n    return from(\n      this.cogniteAuthService\n        .getSdk()\n        .viewer3D.listRevealNodes3D(modelId, revisionId, { nodeId, limit: 1 })\n        .autoPagingToArray()\n    );\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Apollo, gql } from \"apollo-angular\";\n\n@Component({\n  selector: \"app-file-list\",\n  templateUrl: \"./file-list.component.html\",\n  styleUrls: [\"./file-list.component.css\"],\n})\nexport class FileListComponent implements OnInit {\n  favourites: { fileId: string }[];\n  loading = true;\n  error: any;\n\n  constructor(private apollo: Apollo) {}\n\n  ngOnInit(): void {\n    this.apollo\n      .watchQuery<{ MyFavorite: { fileId: string }[] }>({\n        query: gql`\n          {\n            MyFavorite {\n              fileId\n            }\n          }\n        `,\n      })\n      .valueChanges.subscribe((result) => {\n        this.loading = result.loading;\n        this.error = result.error;\n        this.favourites = result.data.MyFavorite;\n      });\n  }\n}\n","<p>file-list works!</p>\n","<mat-toolbar>\r\n  <span>CDF Resource <-> ITG Demo</span>\r\n  <div style=\"margin-right: 40px\"></div>\r\n  <button [routerLink]=\"['/']\" mat-button *ngIf=\"isLoggedIn\">3D Demo</button>\r\n  <button mat-button (click)=\"logout()\" *ngIf=\"isLoggedIn\">Logout</button>\r\n</mat-toolbar>\r\n\r\n<!-- \r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n-->\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.css'],\r\n})\r\nexport class TopBarComponent {\r\n  @Input() isLoggedIn: boolean;\r\n  logout() {\r\n    localStorage.clear();\r\n    window.location.href = window.location.href;\r\n  }\r\n}\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/\r\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router, RouterEvent } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CogniteITGService } from 'src/app/itg-api.service';\n\n@Component({\n  selector: 'app-threed-page',\n  templateUrl: './threed-page.component.html',\n  styleUrls: ['./threed-page.component.css'],\n})\nexport class ThreedPageComponent implements OnInit {\n  @Input() activeRevision: { modelId: number; revisionId: number } | undefined;\n  @Input() activeNodeId: number | undefined;\n  @Input() activeGroupId: string | undefined;\n  @Input() isGroupHightlighted: boolean = false;\n\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    const { queryParams } = this.router.parseUrl(this.router.url);\n    if (queryParams.modelId && queryParams.revisionId) {\n      this.activeRevision = {\n        modelId: Number(queryParams.modelId),\n        revisionId: Number(queryParams.revisionId),\n      };\n    }\n    this.route.queryParamMap.pipe(\n      map((params: ParamMap) => {\n        if (params.get('revisionId')) {\n          this.activeRevision = {\n            revisionId: Number(params.get('revisionId')),\n            modelId: Number(params.get('modelId')),\n          };\n        }\n      })\n    );\n  }\n\n  setActiveRevision(\n    newRevision: { modelId: number; revisionId: number } | undefined\n  ) {\n    this.activeRevision = newRevision;\n    this.router.navigate([], {\n      queryParams: newRevision,\n      queryParamsHandling: 'merge', // remove to replace all query params by provided\n    });\n    this.activeGroupId = undefined;\n    this.activeNodeId = undefined;\n  }\n\n  setActiveGroup(newGroupId: string) {\n    this.activeGroupId = newGroupId;\n  }\n\n  setActiveNode(nodeId: number | undefined) {\n    this.activeNodeId = nodeId;\n  }\n\n  toggleShowVisibleNodes() {\n    this.isGroupHightlighted = !this.isGroupHightlighted;\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"left\">\n    <app-cognite-models-list\n      (onModelAndRevision)=\"setActiveRevision($event)\"\n    ></app-cognite-models-list>\n  </div>\n  <div class=\"right\">\n    <p *ngIf=\"activeRevision === undefined\">\n      Select a 3D Model + Revision to preview it\n    </p>\n    <div class=\"viewer\" *ngIf=\"activeRevision !== undefined\">\n      <app-cognite-threed-viewer\n        [modelId]=\"activeRevision.modelId\"\n        [revisionId]=\"activeRevision.revisionId\"\n        [selectedNodeId]=\"activeNodeId\"\n        [visibleGroupId]=\"isGroupHightlighted ? activeGroupId : undefined\"\n        (onNodeSelect)=\"setActiveNode($event)\"\n      ></app-cognite-threed-viewer>\n    </div>\n    <div class=\"details\" *ngIf=\"activeRevision !== undefined\">\n      <div>\n        <app-itg-groups-list\n          *ngIf=\"activeGroupId === undefined\"\n          (onSelectGroup)=\"setActiveGroup($event)\"\n          [modelId]=\"activeRevision.modelId\"\n          [revisionId]=\"activeRevision.revisionId\"\n        ></app-itg-groups-list>\n        <app-itg-group-details\n          *ngIf=\"activeGroupId !== undefined\"\n          [groupId]=\"activeGroupId\"\n          (onBackClicked)=\"setActiveGroup(undefined)\"\n          (onNodeClicked)=\"setActiveNode($event)\"\n          (onHighlightGroup)=\"toggleShowVisibleNodes()\"\n        ></app-itg-group-details>\n      </div>\n      <div class=\"node-preview\">\n        <app-cognite-threed-node-details\n          *ngIf=\"activeNodeId !== undefined\"\n          [modelId]=\"activeRevision.modelId\"\n          [revisionId]=\"activeRevision.revisionId\"\n          [nodeId]=\"activeNodeId\"\n          [groupId]=\"activeGroupId\"\n          (onClearSelection)=\"setActiveNode(undefined)\"\n        >\n        </app-cognite-threed-node-details>\n        <div *ngIf=\"activeNodeId === undefined\">\n          <h3>Select a node to see the details</h3>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable, OnInit } from '@angular/core';\nimport { CogniteClient } from '@cognite/sdk';\nimport axios from 'axios';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CogniteAuthService {\n  constructor() {}\n\n  loggedIn = new BehaviorSubject(false);\n\n  sdk: CogniteClient = new CogniteClient({\n    appId: 'sample-cdf-graphql-angular-app',\n  });\n\n  getSdk() {\n    return this.sdk;\n  }\n\n  async login(apikey: string) {\n    // Validate the APIKEY supplied\n    const response = await axios.get(\n      'https://api.cognitedata.com/login/status',\n      {\n        headers: {\n          'api-key': apikey,\n        },\n      }\n    );\n\n    // Login with the APIKEY.\n    this.sdk.loginWithApiKey({\n      apiKey: apikey,\n      project: response.data.data.project,\n    });\n\n    this.loggedIn.next(true);\n  }\n\n  async logout() {\n    this.sdk = new CogniteClient({\n      appId: 'sample-cdf-graphql-angular-app',\n    });\n  }\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}